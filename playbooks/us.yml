---
- name: Import all variables
  hosts: all
  tags: always
  tasks:
    - import_role:
        name: variables

- name: Run CA if self signed certs
  hosts: zookeeper:kafka_broker:schema_registry:kafka_connect:ksql:control_center:kafka_rest:kafka_connect_replicator
  gather_facts: false
  environment: "{{ proxy_env }}"
  tasks:
    - import_role:
        name: variables

    - name: Create Certificate Authority and Copy to Ansible Host
      include_tasks: tasks/certificate_authority.yml
      tags: certificate_authority
      run_once: true
      when: >
        self_signed|bool

- name: Generate keystores and truststores for kafka broker
  hosts: kafka_broker
  tags: always
  tasks:
    - set_fact:
        zookeeper_ssl_enabled: true

    - include_role:
        name: ssl
      vars:
        truststore_storepass: "{{kafka_broker_truststore_storepass}}"
        truststore_path: "{{kafka_broker_pkcs12_truststore_path}}"
        keystore_path: "{{kafka_broker_pkcs12_keystore_path}}"
        keystore_storepass: "{{kafka_broker_keystore_storepass}}"
        keystore_keypass: "{{kafka_broker_keystore_keypass}}"
        service_name: kafka_broker
        user: "{{kafka_broker_user}}"
        group: "{{kafka_broker_group}}"
        hostnames: "{{ ([inventory_hostname, ansible_fqdn, ansible_host, ansible_ssh_host, hostname|default(omit)] + kafka_broker_listeners | confluent.platform.get_hostnames(inventory_hostname)) | unique }}"
        ca_cert_path: "{{kafka_broker_ca_cert_path}}"
        cert_path: "{{kafka_broker_cert_path}}"
        key_path: "{{kafka_broker_key_path}}"
        export_certs: "{{kafka_broker_export_certs}}"
        create_bouncy_castle_keystore: "{{fips_enabled}}"
        bcfks_truststore_path: "{{kafka_broker_bcfks_truststore_path}}"
        bcfks_keystore_path: "{{kafka_broker_bcfks_keystore_path}}"
      when: >
        zookeeper_ssl_enabled|bool

- name: Generate keystores and truststores for zookeeper
  hosts: zookeeper
  tags: always
  tasks:
    - set_fact:
        zookeeper_ssl_enabled: true

    - include_role:
        name: ssl
      vars:
        truststore_storepass: "{{zookeeper_truststore_storepass}}"
        truststore_path: "{{zookeeper_truststore_path}}"
        keystore_path: "{{zookeeper_keystore_path}}"
        keystore_storepass: "{{zookeeper_keystore_storepass}}"
        keystore_keypass: "{{zookeeper_keystore_keypass}}"
        service_name: zookeeper
        user: "{{zookeeper_user}}"
        group: "{{zookeeper_group}}"
        hostnames: "{{ [inventory_hostname, ansible_fqdn, ansible_host, ansible_ssh_host, hostname|default(omit)] | unique }}"
        ca_cert_path: "{{zookeeper_ca_cert_path}}"
        cert_path: "{{zookeeper_cert_path}}"
        key_path: "{{zookeeper_key_path}}"
        export_certs: "{{zookeeper_export_certs}}"
      when: >
        zookeeper_ssl_enabled|bool

- name: Enable ssl on zookeeper
  hosts: zookeeper:kafka_broker
  tags: always
  tasks:
    - set_fact:
        deployment_strategy: rolling
        zookeeper_upgrade_ssl_enabled: true
        ssl_mutual_auth_enabled: true
        zookeeper_client_authentication_type: mtls
        zookeeper_quorum_authentication_type: none
        zookeeper_custom_properties:
          clientPort: 2181

- import_playbook: zookeeper.yml

- import_playbook: kafka_broker.yml

- name: Disable the port on zookeeper
  hosts: zookeeper:kafka_broker
  tags: always
  tasks:
    - set_fact:
        deployment_strategy: rolling
        ssl_enabled: true
        ssl_mutual_auth_enabled: true
        zookeeper_client_authentication_type: mtls
        zookeeper_quorum_authentication_type: none

- import_playbook: zookeeper.yml

- import_playbook: kafka_broker.yml

- name: Enable ssl for all components
  hosts: all
  tags: always
  tasks:
    - set_fact:
        deployment_strategy: rolling
        ssl_enabled: true
        ssl_mutual_auth_enabled: true

- import_playbook: schema_registry.yml

- import_playbook: kafka_connect.yml

- import_playbook: ksql.yml

- import_playbook: kafka_rest.yml

- import_playbook: control_center.yml

- import_playbook: kafka_connect_replicator.yml

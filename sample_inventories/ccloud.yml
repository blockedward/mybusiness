---
### Confluent Cloud Connection
##
## The following is an example inventory file of the configuration required for setting up Confluent Platform with
## all components connecting to Kafka and Schema Registry in Confluent Cloud

all:
  vars:
    ansible_connection: ssh
    ansible_user: ec2-user
    ansible_become: true
    ansible_ssh_private_key_file: /home/ec2-user/guest.pem

    # The following ssl_enabled and sasl_protocol variables should be set to prevent incorrect security properties applied.
    ssl_enabled: false
    sasl_protocol: none

    # Component level variables can be set as follows:
    kafka_connect_ssl_enabled: true
    kafka_rest_ssl_enabled: true
    ksql_ssl_enabled: true
    control_center_ssl_enabled: true

    ccloud_bootstrap_servers: pkc-xxxxx.europe-west1.gcp.confluent.cloud:9092,pkc-yyyy.europe-west1.gcp.confluent.cloud:9092,pkc-zzzz.europe-west1.gcp.confluent.cloud:9092
    ccloud_key: YYYYYYYYYYYYYY
    ccloud_secret: zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz

    ccloud_schema_registry_url: https://psrc-zzzzz.europe-west3.gcp.confluent.cloud
    ccloud_schema_registry_user: AAAAAAAAAAAAAAAA
    ccloud_schema_registry_password: bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb

    kafka_connect_custom_properties:
      bootstrap.servers: "{{ccloud_bootstrap_servers}}"
      key.converter: org.apache.kafka.connect.storage.StringConverter
      value.converter: io.confluent.connect.avro.AvroConverter

      ssl.endpoint.identification.algorithm: https
      security.protocol: SASL_SSL
      sasl.mechanism: PLAIN
      sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='{{ccloud_key}}' password='{{ccloud_secret}}';"
      request.timeout.ms: 20000
      retry.backoff.ms: 500

      producer.bootstrap.servers: "{{ccloud_bootstrap_servers}}"
      producer.ssl.endpoint.identification.algorithm: https
      producer.security.protocol: SASL_SSL
      producer.sasl.mechanism: PLAIN
      producer.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='{{ccloud_key}}' password='{{ccloud_secret}}';"
      producer.request.timeout.ms: 20000
      producer.retry.backoff.ms: 500

      consumer.bootstrap.servers: "{{ccloud_bootstrap_servers}}"
      consumer.ssl.endpoint.identification.algorithm: https
      consumer.security.protocol: SASL_SSL
      consumer.sasl.mechanism: PLAIN
      consumer.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='{{ccloud_key}}' password='{{ccloud_secret}}';"
      consumer.request.timeout.ms: 20000
      consumer.retry.backoff.ms: 500

      offset.flush.interval.ms: 10000
      group.id: connect-cluster
      offset.storage.topic: connect-offsets
      offset.storage.replication.factor: 3
      config.storage.topic: connect-configs
      config.storage.replication.factor: 3
      status.storage.topic: connect-status
      status.storage.replication.factor: 3

      # Schema Registry specific settings
      value.converter.basic.auth.credentials.source: USER_INFO
      value.converter.schema.registry.basic.auth.user.info: "{{ccloud_schema_registry_user}}:{{ccloud_schema_registry_password}}"
      value.converter.schema.registry.url: "{{ccloud_schema_registry_url}}"

      confluent.topic.bootstrap.servers: "{{ccloud_bootstrap_servers}}"
      confluent.topic.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='{{ccloud_key}}' password='{{ccloud_secret}}';"
      confluent.topic.security.protocol: SASL_SSL
      confluent.topic.sasl.mechanism: PLAIN

      reporter.admin.bootstrap.servers: "{{ccloud_bootstrap_servers}}"
      reporter.admin.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='{{ccloud_key}}' password='{{ccloud_secret}}';"
      reporter.admin.security.protocol: SASL_SSL
      reporter.admin.sasl.mechanism: PLAIN

      reporter.producer.bootstrap.servers: "{{ccloud_bootstrap_servers}}"
      reporter.producer.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='{{ccloud_key}}' password='{{ccloud_secret}}';"
      reporter.producer.security.protocol: SASL_SSL
      reporter.producer.sasl.mechanism: PLAIN

    control_center_custom_properties:
      bootstrap.servers: "{{ccloud_bootstrap_servers}}"
      confluent.controlcenter.streams.security.protocol: SASL_SSL
      confluent.controlcenter.streams.sasl.mechanism: PLAIN
      confluent.controlcenter.streams.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='{{ccloud_key}}' password='{{ccloud_secret}}';"
      confluent.metrics.topic.max.message.bytes: 8388608
      confluent.controlcenter.streams.ssl.endpoint.identification.algorithm: https

      confluent.controlcenter.internal.topics.replication: 3
      confluent.controlcenter.command.topic.replication: 3
      confluent.controlcenter.replication.factor: 3
      confluent.metrics.topic.replication: 3
      confluent.monitoring.interceptor.topic.replication: 3

      confluent.monitoring.interceptor.security.protocol: SASL_SSL
      confluent.monitoring.interceptor.sasl.mechanism: PLAIN
      confluent.monitoring.interceptor.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='{{ccloud_key}}' password='{{ccloud_secret}}';"
      confluent.monitoring.interceptor.ssl.endpoint.identification.algorithm: https

      # Confluent Schema Registry configuration for Confluent Control Center
      confluent.controlcenter.schema.registry.basic.auth.credentials.source: USER_INFO
      confluent.controlcenter.schema.registry.basic.auth.user.info: "{{ccloud_schema_registry_user}}:{{ccloud_schema_registry_password}}"
      confluent.controlcenter.schema.registry.url: "{{ccloud_schema_registry_url}}"

      confluent.license: "_CONFLUENT_LICENSE_"

      confluent.controlcenter.id: 33

    ksql_custom_properties:
      # A comma separated list of the Confluent Cloud broker endpoints
      bootstrap.servers: "{{ccloud_bootstrap_servers}}"
      ksql.internal.topic.replicas: 3
      ksql.streams.replication.factor: 3
      ksql.logging.processing.topic.replication.factor: 3
      sasl.mechanism: PLAIN
      sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='{{ccloud_key}}' password='{{ccloud_secret}}';"
      security.protocol: SASL_SSL

      # Schema Registry specific settings
      ksql.schema.registry.basic.auth.credentials.source: USER_INFO
      ksql.schema.registry.basic.auth.user.info: "{{ccloud_schema_registry_user}}:{{ccloud_schema_registry_password}}"
      ksql.schema.registry.url: "{{ccloud_schema_registry_url}}"

    kafka_rest_custom_properties:
      bootstrap.servers: "{{ccloud_bootstrap_servers}}"
      sasl.mechanism: PLAIN
      sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='{{ccloud_key}}' password='{{ccloud_secret}}';"
      security.protocol: SASL_SSL

      client.bootstrap.servers: "{{ccloud_bootstrap_servers}}"
      client.sasl.mechanism: PLAIN
      client.sasl.jaas.config: "org.apache.kafka.common.security.plain.PlainLoginModule required username='{{ccloud_key}}' password='{{ccloud_secret}}';"
      client.security.protocol: SASL_SSL

      # Schema Registry specific settings
      schema.registry.basic.auth.credentials.source: USER_INFO
      schema.registry.basic.auth.user.info: "{{ccloud_schema_registry_user}}:{{ccloud_schema_registry_password}}"
      schema.registry.url: "{{ccloud_schema_registry_url}}"

kafka_connect:
  hosts:
    ip-10-0-0-29.eu-west-2.compute.internal:
    ip-10-0-0-22.eu-west-2.compute.internal:

kafka_rest:
  hosts:
    ip-10-0-0-74.eu-west-2.compute.internal:

ksql:
  hosts:
    ip-10-0-0-181.eu-west-2.compute.internal:

control_center:
  hosts:
    ip-10-0-0-237.eu-west-2.compute.internal:

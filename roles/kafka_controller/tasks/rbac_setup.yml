---
- name: extract uuid from meta.properties
  slurp:
    src: "{{ kafka_controller_final_properties['log.dirs'] }}/meta.properties"
  delegate_to: "{{ groups.kafka_controller[0] }}"
  register: uuid_controller

- set_fact:
    uuid_key_controller: "{{ uuid_controller['content'] | b64decode}} "

- name: Set kafka_cluster_id Variable
  set_fact:
    kafka_cluster_id: "{{ uuid_key_controller.partition('cluster.id=')[2].partition('\n')[0] }}"

- name: Create SSL Certificate Directory
  file:
    path: "{{ ssl_file_dir_final }}"
    state: directory
    mode: 0755
  tags:
    - privileged
    - filesystem

- name: Check if MDS public pem file exists on Ansible Controller
  stat:
    path: "{{ token_services_public_pem_file }}"
  register: public_pem_file
  delegate_to: localhost
  vars:
    ansible_connection: local
    ansible_become: "{{ ansible_become_localhost }}"

- name: Debug
  ansible.builtin.debug:
    msg: WARNING - The file {{token_services_public_pem_file}} doesn't exist on the control node
  when: not public_pem_file.stat.exists|bool

- name: Copy in MDS Public Pem File
  copy:
    src: "{{token_services_public_pem_file}}"
    dest: "{{rbac_enabled_public_pem_path}}"
    mode: 0640
    owner: "{{user}}"
    group: "{{group}}"
  when:
    - not ( ssl_provided_keystore_and_truststore_remote_src|bool )
    - public_pem_file.stat.exists|bool
    - copy_certs | default(True)
  diff: "{{ not mask_sensitive_diff|bool }}"

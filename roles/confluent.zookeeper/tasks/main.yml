- name: zookeeper create group
  group:
    name: "{{zookeeper.group}}"
- name: zookeeper create user
  user:
    name: "{{zookeeper.user}}"
    comment: "Zookeeper User"
    system: yes
    group: "{{zookeeper.group}}"
- name: Change keytabs ownership
  file:
    path: "{{zookeeper.keytab}}"
    group: "{{zookeeper.group}}"
    mode: '650'
    recurse: yes
- name: zookeeper myid file
  template:
    src: myid.j2
    dest: "{{zookeeper.config.dataDir}}/myid"
    mode: 0555
    owner: "{{zookeeper.user}}"
    group: "{{zookeeper.group}}"
- name: zookeeper create config
  template:
    src: zookeeper.properties.j2
    dest: "{{zookeeper.config_file}}"
    mode: 0400
    owner: "{{zookeeper.user}}"
    group: "{{zookeeper.group}}"
  register: zookeeper_config
  notify:
    - restart zookeeper
- name: zookeeper Jaas config
  template:
    src: zookeeper_jaas.conf.j2
    dest: "{{zookeeper.jaas_file}}"
    mode: 0640
    owner: "{{zookeeper.user}}"
    group: "{{zookeeper.group}}"
  when: security_mode == "kerberos" or security_mode == "kerberos_ssl" or security_mode == "kerberos_ssl_customcerts"
  notify:
    - restart zookeeper
- name: create systemd override file
  file:
    path: "{{zookeeper.systemd_override}}"
    owner: "{{zookeeper.user}}"
    group: "{{zookeeper.group}}"
    state: directory
    mode: 0640
- name: write environment variables
  template:
    src: environment.j2
    dest: "{{zookeeper.systemd_override}}/override.conf"
    mode: 0640
    owner: "{{zookeeper.user}}"
    group: "{{zookeeper.group}}"
  when: security_mode == "plaintext" or security_mode == "sasl_ssl" or security_mode == "ssl_customcerts"
  notify:
    - reload systemd
    - restart zookeeper
- name: write environment variables
  template:
    src: kerberos_environment.j2
    dest: "{{zookeeper.systemd_override}}/override.conf"
    mode: 0640
    owner: "{{zookeeper.user}}"
    group: "{{zookeeper.group}}"
  when: security_mode == "kerberos" or security_mode == "kerberos_ssl" or security_mode == "kerberos_ssl_customcerts"
  notify:
    - reload systemd
    - restart zookeeper
- name: zookeeper configure service
  systemd:
    name: "{{zookeeper.service_name}}"
    enabled: "{{zookeeper.systemd.enabled}}"
    state: "{{zookeeper.systemd.state}}"

# Maintained by Ansible
bootstrap.servers={{ confluent.cloud.broker.endpoint }}
value.converter.schema.registry.url={% for host in groups['schema-registry'] %}{% if loop.index > 1%},{% endif %}http://{{ host }}:8081/{% endfor %}

key.converter.schema.registry.url={% for host in groups['schema-registry'] %}{% if loop.index > 1%},{% endif %}http://{{ host }}:8081/{% endfor %}

security.protocol=SASL_SSL
producer.security.protocol=SASL_SSL
consumer.security.protocol=SASL_SSL
producer.confluent.monitoring.interceptor.security.protocol=SASL_SSL
consumer.confluent.monitoring.interceptor.security.protocol=SASL_SSL
ssl.endpoint.identification.algorithm=https
producer.ssl.endpoint.identification.algorithm=https
consumer.ssl.endpoint.identification.algorithm=https
producer.confluent.monitoring.interceptor.ssl.endpoint.identification.algorithm=https
consumer.confluent.monitoring.interceptor.ssl.endpoint.identification.algorithm=https

sasl.mechanism=PLAIN
producer.sasl.mechanism=PLAIN
consumer.sasl.mechanism=PLAIN
producer.confluent.monitoring.interceptor.sasl.mechanism=PLAIN
consumer.confluent.monitoring.interceptor.sasl.mechanism=PLAIN

request.timeout.ms=20000
retry.backoff.ms=500
producer.request.timeout.ms=20000
producer.retry.backoff.ms=500
consumer.request.timeout.ms=20000
consumer.retry.backoff.ms=500
producer.confluent.monitoring.interceptor.request.timeout.ms=20000
producer.confluent.monitoring.interceptor.retry.backoff.ms=500
consumer.confluent.monitoring.interceptor.request.timeout.ms=20000
consumer.confluent.monitoring.interceptor.retry.backoff.ms=500

sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username\="{{ confluent.cloud.api.key }}" password\="{{ confluent.cloud.api.secret }}";
producer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username\="{{ confluent.cloud.api.key }}" password\="{{ confluent.cloud.api.secret }}";
consumer.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username\="{{ confluent.cloud.api.key }}" password\="{{ confluent.cloud.api.secret }}";
producer.confluent.monitoring.interceptor.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username\="{{ confluent.cloud.api.key }}" password\="{{ confluent.cloud.api.secret }}";
consumer.confluent.monitoring.interceptor.sasl.jaas.config=org.apache.kafka.common.security.plain.PlainLoginModule required username\="{{ confluent.cloud.api.key }}" password\="{{ confluent.cloud.api.secret }}";

{% for key, value in kafka.connect.distributed.config.items() %}
{{key}}={{value}}
{% endfor %}

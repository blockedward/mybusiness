---
- name: Get Kafka Cluster Id
  import_role:
    name: common
    tasks_from: rbac_setup.yml
  vars:
    copy_certs: false

- name: Register Kafka Cluster
  uri:
    url: "{{mds_bootstrap_server_urls.split(',')[0]}}/security/1.0/registry/clusters"
    method: POST
    validate_certs: false
    force_basic_auth: true
    url_username: "{{mds_super_user}}"
    url_password: "{{mds_super_user_password}}"
    headers:
      Content-Type: application/json
    body_format: json
    # For audit logs, must register the oauth listener which will be the "internal" listener
    body: >
      [
          {
              "clusterName": "{{kafka_broker_cluster_name}}",
              "scope": {
                  "clusters": {
                      "kafka-cluster": "{{kafka_cluster_id}}"
                  }
              },
              "hosts": [ {% for host in groups['kafka_broker'] %}{% if loop.index > 1%},{% endif %}{ "host": "{{host}}", "port": {{kafka_broker_listeners.internal.port}} }{% endfor %}
              ],
              "protocol": "{{kafka_broker_listeners.internal.sasl_protocol|default(sasl_protocol) | confluent.platform.kafka_protocol(kafka_broker_listeners.internal.ssl_enabled|default(ssl_enabled)) }}"
          }
      ]
    status_code: 204
  run_once: true
  register: output
  until: output.status == 204
  retries: "{{ mds_retries }}"
  delay: 10
  when: not oauth_enabled|bool

- name: Get Authorization Token from Identity Provider
  uri:
    url: "{{ oauth_token_uri }}"
    method: POST
    validate_certs: false
    return_content: true
    status_code: 200
    url_username: "{{ oauth_client_id }}"
    url_password: "{{ oauth_client_password }}"
    force_basic_auth: true
    headers:
      Content-Type: application/x-www-form-urlencoded
    body_format: form-urlencoded
    body:
      - ["grant_type", "client_credentials"]
      - ["scope", "{{ oauth_groups_scope }}"]
  register: auth_token
  until: auth_token.status == 200
  retries: 10
  delay: 5
  no_log: "{{mask_secrets|bool}}"
  when:
    - oauth_enabled|bool

- name: Register Kafka Cluster with OAuth
  uri:
    url: "{{mds_bootstrap_server_urls.split(',')[0]}}/security/1.0/registry/clusters"
    method: POST
    validate_certs: false
    headers:
      Content-Type: application/json
      Authorization: "Bearer {{(auth_token.content | from_json).access_token}}"
    body_format: json
    # For audit logs, must register the oauth listener which will be the "internal" listener
    body: >
      [
          {
              "clusterName": "{{kafka_broker_cluster_name}}",
              "scope": {
                  "clusters": {
                      "kafka-cluster": "{{kafka_cluster_id}}"
                  }
              },
              "hosts": [ {% for host in groups['kafka_broker'] %}{% if loop.index > 1%},{% endif %}{ "host": "{{host}}", "port": {{kafka_broker_listeners.internal.port}} }{% endfor %}
              ],
              "protocol": "{{kafka_broker_listeners.internal.sasl_protocol|default(sasl_protocol) | confluent.platform.kafka_protocol(kafka_broker_listeners.internal.ssl_enabled|default(ssl_enabled)) }}"
          }
      ]
    status_code: 204
  run_once: true
  register: output
  until: output.status == 204
  retries: "{{ mds_retries }}"
  delay: 10
  when: oauth_enabled|bool
